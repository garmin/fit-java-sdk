/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2024 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.133.0Release
// Tag = production/release/21.133.0-0-g6002091
/////////////////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;



public class HsaConfigurationDataMesg extends Mesg   {

    
    public static final int TimestampFieldNum = 253;
    
    public static final int DataFieldNum = 0;
    
    public static final int DataSizeFieldNum = 1;
    

    protected static final  Mesg hsaConfigurationDataMesg;
    static {
        // hsa_configuration_data
        hsaConfigurationDataMesg = new Mesg("hsa_configuration_data", MesgNum.HSA_CONFIGURATION_DATA);
        hsaConfigurationDataMesg.addField(new Field("timestamp", TimestampFieldNum, 134, 1, 0, "s", false, Profile.Type.DATE_TIME));
        
        hsaConfigurationDataMesg.addField(new Field("data", DataFieldNum, 13, 1, 0, "", false, Profile.Type.BYTE));
        
        hsaConfigurationDataMesg.addField(new Field("data_size", DataSizeFieldNum, 2, 1, 0, "", false, Profile.Type.UINT8));
        
    }

    public HsaConfigurationDataMesg() {
        super(Factory.createMesg(MesgNum.HSA_CONFIGURATION_DATA));
    }

    public HsaConfigurationDataMesg(final Mesg mesg) {
        super(mesg);
    }


    /**
     * Get timestamp field
     * Units: s
     * Comment: Encoded configuration data
     *
     * @return timestamp
     */
    public DateTime getTimestamp() {
        return timestampToDateTime(getFieldLongValue(253, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD));
    }

    /**
     * Set timestamp field
     * Units: s
     * Comment: Encoded configuration data
     *
     * @param timestamp The new timestamp value to be set
     */
    public void setTimestamp(DateTime timestamp) {
        setFieldValue(253, 0, timestamp.getTimestamp(), Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

    public Byte[] getData() {
        
        return getFieldByteValues(0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
        
    }

    /**
     * @return number of data
     */
    public int getNumData() {
        return getNumFieldValues(0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

    /**
     * Get data field
     *
     * @param index of data
     * @return data
     */
    public Byte getData(int index) {
        return getFieldByteValue(0, index, Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

    /**
     * Set data field
     *
     * @param index of data
     * @param data The new data value to be set
     */
    public void setData(int index, Byte data) {
        setFieldValue(0, index, data, Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

    /**
     * Get data_size field
     * Comment: Size in bytes of data field
     *
     * @return data_size
     */
    public Short getDataSize() {
        return getFieldShortValue(1, 0, Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

    /**
     * Set data_size field
     * Comment: Size in bytes of data field
     *
     * @param dataSize The new dataSize value to be set
     */
    public void setDataSize(Short dataSize) {
        setFieldValue(1, 0, dataSize, Fit.SUBFIELD_INDEX_MAIN_FIELD);
    }

}
